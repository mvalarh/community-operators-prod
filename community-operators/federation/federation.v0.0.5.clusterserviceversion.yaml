#! validate-crd: deploy/chart/templates/0000_30_02-clusterserviceversion.crd.yaml
#! parse-kind: ClusterServiceVersion
apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: federation.v0.0.5
  namespace: placeholder
  annotations:
    capabilities: Basic Install
    categories: "OpenShift Optional, Integration & Delivery"
    description: Gain Hybrid Cloud capabilities between your clusters with Kubernetes Federation.
    certified: "false"
    containerImage: "quay.io/openshift/origin-federation-controller:v4.0.0"
    createdAt: "2019-01-01T00:00:00Z"
spec:
  displayName: Federation
  description: |
    Kubernetes Federation is a tool to sync (aka "federate") a set of Kubernetes objects from a "source" into a set of other clusters. Common use-cases include federating Namespaces across all of your clusters or rolling out an application across several geographically distributed clusters.
    The Kubernetes Federation Operator runs all of the components under the hood to quickly get up and running with this powerful concept. Federation is a key part of any Hybrid Cloud capability.

    ### Using Federation
    After configuring and starting your Federation instance, use the command line tool to enable each type of object you would like federated to all of your clusters.
    This deploys Federation in a namespace-scoped configuration. This means that only objects that share the Namespace where your Federation instance is deployed can be federated. You must enable Federation support for Namespaces in this configuration before other types will work. Use `kubefed2 enable namespaces`.

    Next, use `kubefed2 enable <API type>` for the other objects you would like to federate.
    Finally, [register the other clusters](https://github.com/kubernetes-sigs/federation-v2/blob/master/docs/userguide.md#join-clusters) that will be federated to.
    See the [full user guide](https://github.com/kubernetes-sigs/federation-v2/blob/master/docs/userguide.md) for other capabilities of Federation.
  keywords: ['kubernetes', 'federation', 'hybrid', 'hybrid cloud', 'multi-cluster', 'cluster']
  version: 0.0.5
  maturity: alpha
  provider:
    name: Red Hat
  labels:
    alm-owner-federation: federation
    alm-status-descriptors: federation.v0.0.5
  installModes:
  - type: OwnNamespace
    supported: true
  - type: SingleNamespace
    supported: true
  - type: MultiNamespace
    supported: false
  - type: AllNamespaces
    supported: false
  install:
    strategy: deployment
    spec:
      permissions:
      - serviceAccountName: federation-controller-manager
        rules:
        - apiGroups:
          - clusterregistry.k8s.io
          resources:
          - clusters
          verbs:
          - "*"
        - apiGroups:
          - core.federation.k8s.io
          resources:
          - "*"
          verbs:
          - "*"
        - apiGroups:
          - primitives.federation.k8s.io
          resources:
          - "*"
          verbs:
          - "*"
        - apiGroups:
          - multiclusterdns.federation.k8s.io
          resources:
          - "*"
          verbs:
          - "*"
        - apiGroups:
          - scheduling.federation.k8s.io
          resources:
          - "*"
          verbs:
          - "*"
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          verbs:
          - "*"
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - "*"
      deployments:
      - name: federation-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: federation-controller-manager
          template:
            metadata:
              labels:
                app: federation-controller-manager
            spec:
              containers:
                - name: controller-manager
                  image: quay.io/openshift/origin-federation-controller:v4.0.0
                  resources:
                    limits:
                      cpu: 100m
                      memory: 128Mi
                    requests:
                      cpu: 100m
                      memory: 64Mi
                  command:
                    - /root/controller-manager
                  args:
                    - --federation-namespace=$(FEDERATION_NAMESPACE)
                    - --install-crds=false
                    - --limited-scope=true
                    - --registry-namespace=$(CLUSTER_REGISTRY_NAMESPACE)
                    - -v=5
                    - --logtostderr
                  imagePullPolicy: Always
                  env:
                  - name: FEDERATION_NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.namespace
                  - name: CLUSTER_REGISTRY_NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.namespace
              restartPolicy: Always
              terminationGracePeriodSeconds: 5
              serviceAccountName: federation-controller-manager
              serviceAccount: federation-controller-manager
  customresourcedefinitions:
    owned:
      - description: Represents endpoint information about a remote cluster
        displayName: Cluster Registry Application
        kind: Cluster
        name: clusters.clusterregistry.k8s.io
        version: v1alpha1
      - description: Represents a Domain name and nameserver for use with multicluster DNS
        displayName: Domain
        kind: Domain
        name: domains.multiclusterdns.federation.k8s.io
        version: v1alpha1
      - description: Represents a Cluster that Federation can spread resources to
        displayName: FederatedCluster Resource
        kind: FederatedCluster
        name: federatedclusters.core.federation.k8s.io
        version: v1alpha1
      - description: Programs Federation to be aware of a new API type
        displayName: Federation Type Configuration
        kind: FederatedTypeConfig
        name: federatedtypeconfigs.core.federation.k8s.io
        version: v1alpha1
      - description: Represents the status of a FederatedService
        displayName: Federated service status
        kind: FederatedServiceStatus
        name: federatedservicestatuses.core.federation.k8s.io
        version: v1alpha1        
      - description: Represents information about the version of a federated resource
        displayName: PropagatedVersion Resource
        kind: PropagatedVersion
        name: propagatedversions.core.federation.k8s.io
        version: v1alpha1
      - description: Represents an instance of a DNSEndpoint resource
        displayName: DNSEndpoint Resource
        kind: DNSEndpoint
        name: dnsendpoints.multiclusterdns.federation.k8s.io
        version: v1alpha1
      - description: Represents an instance of a MultiClusterIngressDNSRecord resource
        displayName: MultiClusterIngressDNSRecord Resource
        kind: IngressDNSRecord
        name: ingressdnsrecords.multiclusterdns.federation.k8s.io
        version: v1alpha1
      - description: Represents an instance of a MultiClusterServiceDNSRecord resource
        displayName: MultiClusterServiceDNSRecord Resource
        kind: ServiceDNSRecord
        name: servicednsrecords.multiclusterdns.federation.k8s.io
        version: v1alpha1
      - description: Represents an instance of a ReplicaSchedulingPreference resource
        displayName: ReplicaSchedulingPreference Resource
        kind: ReplicaSchedulingPreference
        name: replicaschedulingpreferences.scheduling.federation.k8s.io
        version: v1alpha1
