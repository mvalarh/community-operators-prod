apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: jaeger-operator.v1.8.2
  namespace: placeholder
  annotations:
    categories: "Logging & Tracing"
    certified: "false"
    containerImage: docker.io/jaegertracing/jaeger-operator:1.8.2
    createdAt:  2019-01-09T12:00:00Z
    capabilities: Seamless Upgrades
    support: Jaeger
    description: Provides tracing, monitoring and troubleshooting microservices-based distributed systems
    alm-examples: |-
      [
        {
          "apiVersion": "io.jaegertracing/v1alpha1",
          "kind": "Jaeger",
          "metadata": {
            "name": "my-jaeger"
          },
          "spec": {
            "strategy": "allInOne",
            "allInOne": {
              "image": "jaegertracing/all-in-one:1.8",
              "options": {
                "log-level": "debug",
                "query": {
                  "base-path": "/jaeger"
                }
              }
            },
            "ui": {
              "options": {
                "dependencies": {
                  "menuEnabled": false
                },
                "tracking": {
                  "gaID": "UA-000000-2"
                },
                "menu": [
                  {
                    "label": "About Jaeger",
                    "items": [
                      {
                        "label": "Documentation",
                        "url": "https://www.jaegertracing.io/docs/latest"
                      }
                    ]
                  }
                ]
              }
            },
            "storage": {
              "options": {
                "memory": {
                  "max-traces": 100000
                }
              }
            }
          }
        }
      ]
spec:
  displayName: Jaeger Tracing
  description: |-
    Jaeger, inspired by [Dapper](https://research.google.com/pubs/pub36356.html) and [OpenZipkin](http://zipkin.io/), is a distributed tracing system released as open source by Uber Technologies. It is used for monitoring and troubleshooting microservices-based distributed systems.

    ### Supported Features

    * **Multiple modes** - Supports `allInOne`, `production`, and `streaming` [modes of deployment](https://github.com/jaegertracing/jaeger-operator#strategies).

    * **Configuration** - Directly pass down all supported Jaeger configuration through the Operator.

    * **Storage** - Configure storage used by Jaeger. By default, `memory` is used.

    ### Accessing the UI

    By default, the Operator exposes the Jaeger UI as an Ingress. This can be disabled via configuration. See [Accessing the UI](https://github.com/jaegertracing/jaeger-operator#accessing-the-ui) in the documentation for more details.

    ### Example Configuration

    A more complex Jaeger instance taken from the [documentation](https://github.com/jaegertracing/jaeger-operator#creating-a-new-jaeger-instance):

        apiVersion: io.jaegertracing/v1alpha1
        kind: Jaeger
        metadata:
          name: my-jaeger
        spec:
          strategy: allInOne
          allInOne:
            image: jaegertracing/all-in-one:latest
            options:
              log-level: debug
          storage:
            type: memory
            options:
              memory:
                max-traces: 100000
          ingress:
            enabled: false
          agent:
            strategy: DaemonSet
          annotations:
            scheduler.alpha.kubernetes.io/critical-pod: ""

  keywords: ['tracing', 'monitoring', 'troubleshooting']
  version: 1.8.2
  maintainers:
  - name: Jaeger Google Group
    email: jaeger-tracing@googlegroups.com
  provider:
    name: Jaeger
  labels:
    name: jaeger-operator
  selector:
    matchLabels:
      name: jaeger-operator
  links:
  - name: Jaeger Operator Source Code
    url: https://github.com/jaegertracing/jaeger-operator
  installModes:
  - type: OwnNamespace
    supported: true
  - type: SingleNamespace
    supported: true
  - type: MultiNamespace
    supported: false
  - type: AllNamespaces
    supported: true
  install:
    strategy: deployment
    spec:
      permissions:
      - serviceAccountName: jaeger-operator
        rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          - serviceaccounts
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - io.jaegertracing
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - extensions
          resources:
          - ingresses
          verbs:
          - "*"
        - apiGroups:
          - batch
          resources:
          - jobs
          - cronjobs
          verbs:
          - "*"
      deployments:
      - name: jaeger-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: jaeger-operator
          template:
            metadata:
              labels:
                name: jaeger-operator
            spec:
              serviceAccountName: jaeger-operator
              containers:
                - name: jaeger-operator
                  image: jaegertracing/jaeger-operator:1.8.2
                  ports:
                  - containerPort: 60000
                    name: metrics
                  args: ["start"]
                  imagePullPolicy: Always
                  env:
                    - name: WATCH_NAMESPACE
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.annotations['olm.targetNamespaces']
                    - name: POD_NAME
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.name
                    - name: OPERATOR_NAME
                      value: "jaeger-operator"
  customresourcedefinitions:
    owned:
    - name: jaegers.io.jaegertracing
      version: v1alpha1
      kind: Jaeger
      displayName: Jaeger
      description: A configuration file for a Jaeger custom resource.
