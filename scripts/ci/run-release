#!/usr/bin/env bash
set -e

NO_OPERATOR=0 #related to ansible-env
scripts/ci/ansible-env

if [ -f /tmp/vars-op-path ]; then
    source /tmp/vars-op-path
    if [ "$NO_OPERATOR" -gt "0"  ]; then
     exit 0 # no need to test/release, no operator modified
    fi

    RELEASE_TARGET=''
    GENERATE_OP_CONF=1
    FORCE_RELEASE=0

    case "$1" in

    -u)  echo "Release pipeline upstream"
            STREAM_NAME='upstream-community-operators'
            RELEASE_TARGET='-e operators_config=/tmp/changed-operators-'$STREAM_NAME'.yaml -e quay_api_token='$AUTOMATION_TOKEN_RELEASE_UPSTREAM' -e bundle_registry=quay.io -e bundle_image_namespace=operatorhubio -e bundle_index_image_namespace=operatorhubio -e bundle_index_image_name=catalog -e index_force_update=true'
        ;;
    -c)  echo "Release pipeline community"
            STREAM_NAME='community-operators'
    #        RELEASE_TARGET="-e operators_config=/tmp/changed-operators-$STREAM_NAME.yaml -e quay_api_token=$AUTOMATION_TOKEN_RELEASE_COMMUNITY -e bundle_registry=quay.io -e bundle_image_namespace=openshift-community-operators -e bundle_index_image_namespace=openshift-community-operators -e bundle_index_image_name=catalog -e index_force_update=true -e mirror_index_images=quay.io/redhat/redhat----community-operator-index|redhat+iib_community|$QUAY_RH_INDEX_PW"
            RELEASE_TARGET="-e operators_config=/tmp/changed-operators-$STREAM_NAME.yaml -e quay_api_token=$AUTOMATION_TOKEN_RELEASE_COMMUNITY -e bundle_registry=quay.io -e bundle_image_namespace=openshift-community-operators -e bundle_index_image_namespace=openshift-community-operators -e bundle_index_image_name=catalog -e index_force_update=true"
        ;;
    -U)  echo "Release pipeline upstream TO A TEST ORGANIZATION!!"
            STREAM_NAME='upstream-community-operators'
            RELEASE_TARGET='-e operators_config=/tmp/changed-operators-'$STREAM_NAME'.yaml -e quay_api_token='$AUTOMATION_TOKEN_RELEASE_UPSTREAM_TEST' -e bundle_registry=quay.io -e bundle_image_namespace=operator_testing -e bundle_index_image_namespace=operator_testing -e bundle_index_image_name=catalog'
        ;;
    -C)  echo "Release pipeline community TO A TEST ORGANIZATION!!"
            STREAM_NAME='community-operators'
            RELEASE_TARGET='-e operators_config=/tmp/changed-operators-'$STREAM_NAME'.yaml -e quay_api_token='$AUTOMATION_TOKEN_RELEASE_COMMUNITY_TEST' -e bundle_registry=quay.io -e bundle_image_namespace=operator_testing_community -e bundle_index_image_namespace=operator_testing_community -e bundle_index_image_name=catalog'
        ;;
    -t)  echo  "Testing if release is possible"
            GENERATE_OP_CONF=0
            FORCE_RELEASE=1
            if [ "$2" = "prod" ]; then
                if [ "$STREAM_NAME" = "upstream-community-operators" ] ; then CHECK_WITH='-e production_registry_namespace=quay.io/operatorhubio'
                else CHECK_WITH='-e production_registry_namespace=quay.io/openshift-community-operators'
                fi

                if [[ $OP_VER_OVERWRITE -eq 1 ]] || [[ $OP_RECREATE -eq 1 ]];then
                    CHECK_WITH="$CHECK_WITH -e fail_on_no_index_change=false -e index_force_update=true"
                else
                    CHECK_WITH="$CHECK_WITH -e fail_on_no_index_change=true"
                fi

            fi
            RELEASE_TARGET="-e operator_dir=$(pwd)/$OP_PATH -e strict_mode=true $CHECK_WITH"
        ;;
    -s)  echo  "Testing if release pipeline is working"
            GENERATE_OP_CONF=0
            RELEASE_TARGET='-e operators_config=/tmp/changed-operators-upstream-community-operators.yaml'
            echo "operator_base_dir: $(pwd)/upstream-community-operators" > /tmp/changed-operators-upstream-community-operators.yaml

            cat <<EOT >> /tmp/changed-operators-upstream-community-operators.yaml
operators:
- akka-cluster-operator
EOT
            cat /tmp/changed-operators-upstream-community-operators.yaml
            FORCE_RELEASE=1
        ;;
    *) echo "Syntax: $0 [-r|t|s]"
       echo "options:"
       echo "u     upstream - Run release pipeline"
       echo "c     community - Run release pipeline"
       echo "t     test - Testing locally if release is possible on this specific operator."
       echo "s     sample - Testing locally on a sample if release pipeline is working."
       echo

    esac

    echo "Release pipeline starting"

    if [[ $(echo $GENERATE_OP_CONF) == 1 ]]; then

        git log -m -1 --pretty=format: --name-only --since="1 days ago"
        git log -m -1 --pretty=format: --name-only --since="1 days ago" | sort | uniq > /tmp/changed-git-files-orig-$STREAM_NAME
        grep "^$STREAM_NAME" /tmp/changed-git-files-orig-$STREAM_NAME > /tmp/changed-git-files-$STREAM_NAME
        cat /tmp/changed-git-files-$STREAM_NAME
        if [ $(cat /tmp/changed-git-files-$STREAM_NAME|wc -l) -gt 0 ]; then
            # ignore specific files in upstream-community-operators top level like OWNERS
            awk -F '/' 'NF>2 {print}' /tmp/changed-git-files-$STREAM_NAME > /tmp/changed-git-files-top-lev-$STREAM_NAME
            awk -F "$STREAM_NAME/" '{ print $2 }' /tmp/changed-git-files-top-lev-$STREAM_NAME > /tmp/changed-git-files-list-$STREAM_NAME
            awk -F '/' '{ print $1 }' /tmp/changed-git-files-list-$STREAM_NAME|sort|uniq > /tmp/changed-git-files-opnames-$STREAM_NAME
            sed 's/^/- /' /tmp/changed-git-files-opnames-$STREAM_NAME > /tmp/changed-operators-$STREAM_NAME.yaml
            sed -i "1ioperator_base_dir: $(pwd)/$STREAM_NAME\noperators:" /tmp/changed-operators-$STREAM_NAME.yaml
            CHANGED_OPERATORS=`cat /tmp/changed-operators-$STREAM_NAME.yaml`
        else
            CHANGED_OPERATORS=''
            echo "Nothing to release"
            exit 0
        fi
        echo "Input config:"
        echo "$CHANGED_OPERATORS"

        pwd
        ls
    fi
    #fast run, only bundle/index handling using tags
    ansible-pull -U $ANSIBLE_PULL_REPO -C $ANSIBLE_PULL_BRANCH $ANSIBLE_BASE_ARGS $ANSIBLE_EXTRA_ARGS --tags host_build,deploy_bundles $RELEASE_TARGET $MY_EXTRA

else
     echo "The file /tmp/vars-op-path does not exist."
     exit 1
fi