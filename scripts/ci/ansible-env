#!/bin/bash

set -e

unset OP_PATH
unset OP_VER
[ -e /tmp/op_ver ] && rm /tmp/op_ver
export PR_COMMIT=$(git log -n2 --format=format:"%H" | tail -n 1)
export MODE_CHANGE=0 # targeting ci.yaml

echo "PR_COMMIT=$PR_COMMIT"
echo "git log"
git --no-pager log --oneline|head
echo
echo "Source commit details:"
git --no-pager log -m -1 --name-only --first-parent $PR_COMMIT



declare -A CHANGED_FILES

CHANGED_FILES=$(git --no-pager log -m -1 --name-only --first-parent $PR_COMMIT|awk 'NR > 8 { print }'|grep '/' 2>&1)
echo "CHANGED_FILES:"
echo ${CHANGED_FILES[@]}
echo

UPSTREAM_SET=0
COMMUNITY_SET=0

echo "processing files:"
for sf in ${CHANGED_FILES[@]}; do
  echo $sf

  if [[ $sf == "upstream"* ]]; then
      if [ "$COMMUNITY_SET" -gt "0"  ]; then echo "You are allowed to edit only one stream - upstream-community-operators or community-operators"; exit 1; fi
      export RUN_UPSTREAM=true
      #for run-release
      export STREAM_NAME=upstream-community-operators
      UPSTREAM_SET=1
  elif [[ $sf == "community"* ]]; then
      if [ "$UPSTREAM_SET" -gt "0"  ]; then echo "You are allowed to edit only one stream - upstream-community-operators or community-operators"; exit 1; fi
      export STREAM_NAME=community-operators
      COMMUNITY_SET=1
  else
      echo "Edited files outside upstream-community-operators/community-operators !!! "
  fi

  if [ $(echo $sf| awk -F'/' '{print NF}') -ge 4 ]; then
      OP_NAME="$(echo "$sf" | awk -F'/' '{ print $2 }')"
      OP_VER="$(echo "$sf" | awk -F'/' '{ print $3 }')"
      OP_PATH="$(echo "$sf" | awk -F'/' '{ print $1"/"$2 }')"
  fi
done
echo
export OP_PATH=$OP_PATH
export OP_NAME=$OP_NAME
export OP_VER=$OP_VER

echo "OP_PATH=$OP_PATH"
echo "OP_NAME=$OP_NAME"
echo "OP_VER=$OP_VER"
